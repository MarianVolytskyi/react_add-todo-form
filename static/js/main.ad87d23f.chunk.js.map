{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","title","completed","id","cn","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","todosWithUser","App","useState","setUserId","errorUserId","setErrorUserId","setTitle","errorTitle","setErrorTitle","setTodos","maxId","Math","max","action","method","onSubmit","event","preventDefault","trim","htmlFor","placeholder","type","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad87d23f.chunk.js","sourcesContent":["import { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n    {user?.name}\n  </a>\n);\n","import cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\nimport { Todos } from '../../types/Todos';\n\ntype Props = {\n  todo: Todos;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { user, title, completed } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todos } from '../../types/Todos';\n\ntype Props = {\n  todos: Todos[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todos } from './types/Todos';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find(user => user?.id === userId) || null;\n}\n\nexport const todosWithUser: Todos[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [userId, setUserId] = useState(0);\n  const [errorUserId, setErrorUserId] = useState<boolean>(false);\n\n  const [title, setTitle] = useState('');\n  const [errorTitle, setErrorTitle] = useState<boolean>(false);\n\n  const [todos, setTodos] = useState<Todos[]>(todosWithUser);\n\n  const maxId = Math.max(...todos.map(todo => todo.id)) + 1;\n\n  const resetField = () => {\n    setUserId(0);\n    setTitle('');\n    setErrorTitle(false);\n    setErrorUserId(false);\n  };\n\n  const handleSubmit = (event:React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title.trim() && !userId) {\n      setErrorTitle(true);\n      setErrorUserId(true);\n\n      return;\n    }\n\n    if (!title.trim()) {\n      setErrorTitle(true);\n\n      return;\n    }\n\n    if (!userId) {\n      setErrorUserId(true);\n\n      return;\n    }\n\n    setTodos([\n      ...todos,\n      {\n        id: maxId,\n        title,\n        userId,\n        completed: false,\n        user: getUserById(userId),\n      },\n    ]);\n\n    resetField();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n\n          <input\n            id=\"title\"\n            placeholder=\"Enter a title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={event => {\n              setTitle(event.target.value);\n              setErrorTitle(false);\n            }}\n          />\n          {errorTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userId\">User: </label>\n\n          <select\n            id=\"userId\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={event => {\n              setUserId(+event.target.value);\n              setErrorUserId(false);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {\n            errorUserId && (\n              <span className=\"error\">Please choose a user</span>\n            )\n          }\n\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}